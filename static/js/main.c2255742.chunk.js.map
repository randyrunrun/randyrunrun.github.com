{"version":3,"sources":["helpers/utilities.js","redux/actions.js","components/PostList.js","components/PostListContainer.js","components/Header.js","components/Post.js","components/PostContainer.js","components/Editer.js","redux/reducers.js","redux/store.js","statics/forbidden.jpeg","app.js","index.js"],"names":["fullYear","capitalize","string","toUpperCase","slice","capitalizeWords","words","wordsArray","split","length","reduce","accumulatedWords","word","faker","date","past","recent","lorem","paragraph","paragraphs","slug","uuid","random","FETCH_POSTS","RECEIVE_POSTS","recentDates","Array","fill","map","sort","date1","date2","receivePosts","count","options","posts","summary","id","title","content","pop","type","IconText","icon","text","React","createElement","PostList","this","props","fetchPosts","isLoading","itemLayout","size","dataSource","renderItem","item","to","style","textDecoration","Item","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","description","height","lineHeight","borderRadius","backgroundColor","color","textAlign","fontSize","onEnter","thickness","PureComponent","PostListContainer","connect","state","isFetching","items","dispatch","setTimeout","wrapper","Header","_handleClick","history","goBack","push","isPost","location","pathname","indexOf","iconElementLeft","onClick","showMenuIconButton","withRouter","contentStyle","minHeight","headerHeight","paperStyle","padding","Post","_renderProgress","_renderPost","post","className","onBack","window","back","subTitle","column","label","zDepth","dateTime","moment","fromNow","index","fetchPost","Date","getFullYear","PostContainer","ownProps","match","params","find","Editer","editorState","BraftEditor","createEditorState","outputHTML","handleChange","setState","toRAW","setEditorContentAsync","isLivinig","value","onChange","Component","initialState","combineReducers","action","Object","assign","concat","createStore","rootReducer","applyMiddleware","thunkMiddleware","createLogger","Layout","Content","Footer","Sider","App","store","styles","header","display","background","Background","site_layout","sider","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","PieChartOutlined","DesktopOutlined","ContainerOutlined","margin","exact","path","component","render","_redirectToHome","COS","require","ReactDOM","StrictMode","document","getElementById","cos","SecretId","SecretKey","putObject","Bucket","Region","Key","Body","JSON","stringify","a","b","onProgress","progressData","console","log","err","data","getObject"],"mappings":"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","file":"static/js/main.c2255742.chunk.js","sourcesContent":["/**\n * Capitalizes string.\n *\n * @param  {String} string\n * @return {String}\n */\n const capitalize = string => {\n    if (!string) return string;\n    return string[0].toUpperCase() + string.slice(1);\n  };\n  \n  /**\n   * Capitalizes words.\n   *\n   * @param  {String} words\n   * @return {String}\n   */\n  export const capitalizeWords = words => {\n    const wordsArray = words.split(' ');\n  \n    // single word\n    if (wordsArray.length === 1) {\n      return capitalize(words);\n    }\n  \n    // multiple words\n    return wordsArray.reduce((accumulatedWords, word) => {\n      // first word\n      if (!accumulatedWords) return capitalize(word);\n  \n      // empty array item\n      if (!word) return accumulatedWords;\n  \n      // concatenate word\n      return `${accumulatedWords} ${capitalize(word)}`;\n    }, '');\n  };\n  \n  let fullYear;\n  \n  /**\n   * Gets full year.\n   *\n   * @return {Number}\n   */\n  export const getFullYear = () => {\n    if (!fullYear) {\n      fullYear = new Date().getFullYear();\n    }\n    return fullYear;\n  };\n  \n  /**\n   * Truncates text.\n   *\n   * @param  {String} text\n   * @param  {Number} [limit]\n   * @return {String}\n   */\n  export const truncate = (text, limit) => {\n    if (typeof text !== 'string') return '';\n  \n    if (text.length > limit) {\n      // truncate string based on limit\n      text = text.substring(0, limit);\n    }\n  \n    // truncate to last whitespace if applicable\n    const lastSpaceIndex = text.lastIndexOf(' ');\n    if (lastSpaceIndex !== -1) {\n      text = text.substring(0, lastSpaceIndex);\n    }\n  \n    // trim trailing whitespace/periods\n    return text.replace(/[\\s.]+$/g, '');\n  };\n  ","import faker from 'faker';\nimport { capitalizeWords } from '../helpers/utilities';\n\nconst {\n  date: { past, recent },\n  lorem: { paragraph, paragraphs, slug, words },\n  random: { uuid },\n} = faker;\n\n// action constants\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\n\n// generate a list of recent dates sorted in ascending order\nconst recentDates = Array(50)\n  .fill()\n  .map(() => recent())\n  .sort((date1, date2) => {\n    if (date1 > date2) return 1;\n    if (date1 < date2) return -1;\n    return 0;\n  });\n\n/**\n * Receives posts (mocked by faker).\n *\n * @param {Number} [count=1]\n * @param {Object} [options]\n */\nexport const receivePosts = (count = 1, options = {}) => {\n  const posts = Array(count)\n    .fill()\n    .map(() => {\n      const summary = paragraph();\n      return {\n        id: options.id || uuid().split('-')[0],\n        title: capitalizeWords(words()),\n        summary,\n        content: `${summary}\\n${paragraphs()}`,\n        date: recentDates.pop() || past(),\n        slug: options.slug || slug(),\n      };\n    });\n\n  return {\n    type: RECEIVE_POSTS,\n    posts,\n  };\n};\n\nconst POST_COUNT = 10;\n\n/**\n * Fetches 10 posts.\n */\nexport const fetchPosts = () => {\n  return dispatch => {\n    // emulate api request\n    setTimeout(() => dispatch(receivePosts(POST_COUNT)), 1000);\n  };\n};\n\n/**\n * Fetches post.\n *\n * @param {String} id\n * @param {String} slug\n */\nexport const fetchPost = (id, slug) => {\n  return dispatch => {\n    // emulate api request\n    setTimeout(() => dispatch(receivePosts(1, { id, slug })), 1000);\n  };\n};\n","import \"@/app.css\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Waypoint from \"react-waypoint\";\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport Divider from \"material-ui/Divider\";\nimport { List, Avatar, Space, BackTop } from \"antd\";\n\nimport { MessageOutlined, LikeOutlined, StarOutlined } from \"@ant-design/icons\";\n\nexport const TRUNCATION_LIMIT = 150;\n\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\n\nexport default class PostList extends PureComponent {\n  static propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    posts: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        id: PropTypes.string,\n        slug: PropTypes.string,\n        summary: PropTypes.string,\n        title: PropTypes.string,\n      })\n    ),\n  };\n\n  render() {\n    const { fetchPosts, isLoading, posts } = this.props;\n\n    return (\n      <div>\n        {/* posts */}\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          dataSource={posts}\n          renderItem={(item) => (\n            <div>\n              <Link\n                to={`/posts/${item.id}/${item.slug}`}\n                style={{ textDecoration: \"none\" }}\n              >\n                <List.Item\n                  key={item.title}\n                  actions={[\n                    <IconText\n                      icon={StarOutlined}\n                      text=\"156\"\n                      key=\"list-vertical-star-o\"\n                    />,\n                    <IconText\n                      icon={LikeOutlined}\n                      text=\"156\"\n                      key=\"list-vertical-like-o\"\n                    />,\n                    <IconText\n                      icon={MessageOutlined}\n                      text=\"2\"\n                      key=\"list-vertical-message\"\n                    />,\n                  ]}\n                  extra={\n                    <img\n                      width={272}\n                      alt=\"logo\"\n                      src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                    />\n                  }\n                >\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<a href={item.href}>{item.title}</a>}\n                    description={item.summary}\n                    id={item.id}\n                    slug={item.slug}\n                  />\n                  {item.content}\n                </List.Item>\n              </Link>\n              <Divider />\n            </div>\n          )}\n        />\n        <BackTop>\n          <div\n            style={{\n              height: 40,\n              width: 80,\n              lineHeight: \"40px\",\n              borderRadius: 4,\n              backgroundColor: \"#1088e9\",\n              color: \"#fff\",\n              textAlign: \"center\",\n              fontSize: 14,\n            }}\n          >\n            回到顶部\n          </div>\n        </BackTop>\n        {/* waypoint */}\n        {!isLoading && <Waypoint onEnter={fetchPosts} />}\n        <br />\n        <br />\n        {/* progress */}\n        <div style={{ textAlign: \"center\" }}>\n          <CircularProgress size={80} thickness={6} />\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { fetchPosts } from '../redux/actions';\nimport PostList from './PostList';\n\nconst mapStateToProps = state => {\n  const { posts: { isFetching, items } } = state;\n  return {\n    isLoading: isFetching,\n    posts: items,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: () => dispatch(fetchPosts()),\n});\n\nconst wrapper = connect(mapStateToProps, mapDispatchToProps);\nconst PostListContainer = wrapper(PostList);\nexport default PostListContainer;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from 'material-ui/AppBar';\nimport IconButton from 'material-ui/IconButton';\nimport ArrowBack from 'material-ui/svg-icons/navigation/arrow-back';\n\nexport const height = 64;\n\nexport class Header extends PureComponent {\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({\n      goBack: PropTypes.func,\n      length: PropTypes.number,\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  _handleClick = () => {\n    const { history: { goBack, length, push } } = this.props;\n    length < 4 ? push('/') : goBack();\n  };\n\n  render() {\n    const { location: { pathname } } = this.props;\n    const isPost = pathname.indexOf('/posts/') !== -1;\n\n    return (\n      <AppBar\n        title=\"Randy's House\"\n        iconElementLeft={\n          isPost ? (\n            <IconButton onClick={this._handleClick}>\n              <ArrowBack />\n            </IconButton>\n          ) : null\n        }\n        showMenuIconButton={isPost}\n        style={{ textAlign: 'center' }}\n      />\n    );\n  }\n}\n\nconst HeaderWithRouter = withRouter(Header);\nexport default HeaderWithRouter;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport Divider from \"material-ui/Divider\";\nimport Paper from \"material-ui/Paper\";\nimport { getFullYear } from \"../helpers/utilities\";\nimport { height as headerHeight } from \"./Header\";\nimport { PageHeader, Tag, Button, Statistic, Descriptions, Row } from \"antd\";\n\nconst footerHeight = 50;\nconst contentStyle = {\n  minHeight: `calc(100vh - ${headerHeight + footerHeight}px)`,\n};\nconst paperStyle = { padding: 16 };\n\nexport default class Post extends PureComponent {\n  static propTypes = {\n    fetchPost: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    post: PropTypes.shape({\n      content: PropTypes.string,\n      date: PropTypes.instanceOf(Date),\n      title: PropTypes.string,\n    }),\n    slug: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    const { fetchPost, id, post, slug } = this.props;\n    if (!post) {\n      fetchPost(id, slug);\n    }\n  }\n\n  _renderProgress = () => {\n    return (\n      <div style={{ ...paperStyle, textAlign: \"center\" }}>\n        <br />\n        <CircularProgress size={80} thickness={6} />\n      </div>\n    );\n  };\n\n  _renderPost = () => {\n    const { title, date, content } = this.props.post;\n    return (\n      <div>\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => window.history.back()}\n          title=\"Title\"\n          subTitle=\"This is a subtitle\"\n          extra={[\n            <Button key=\"3\">Operation</Button>,\n            <Button key=\"2\">Operation</Button>,\n            <Button key=\"1\" type=\"primary\">\n              Primary\n            </Button>,\n          ]}\n        >\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n            <Descriptions.Item label=\"Association\">\n              <a>421421</a>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation Time\">\n              2017-01-10\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Effective Time\">\n              2017-10-10\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Remarks\">\n              Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n\n        <Paper zDepth={0} style={paperStyle}>\n          <article>\n            <h1>{title}</h1>\n            <time dateTime={date}>{moment(date).fromNow()}</time>\n            <br />\n            <br />\n            <Divider />\n            {content &&\n              content\n                .split(\"\\n\")\n                .map((paragraph, index) => <p key={index}>{paragraph}</p>)}\n          </article>\n        </Paper>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={contentStyle}>\n          {this.props.post ? this._renderPost() : this._renderProgress()}\n        </div>\n        <Divider />\n        <Paper zDepth={0} style={paperStyle}>\n          <footer>Copyright {getFullYear()} Acme Corp.</footer>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { find } from 'lodash';\nimport { fetchPost } from '../redux/actions';\n\nimport Post from './Post';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { match: { params: { id, slug } } } = ownProps;\n  const post = find(state.posts.items, { id });\n  return { id, post, slug };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPost: (id, slug) => dispatch(fetchPost(id, slug)),\n});\n\nconst wrapper = connect(mapStateToProps, mapDispatchToProps);\nconst PostContainer = wrapper(Post);\nexport default PostContainer;","import 'braft-editor/dist/index.css'\nimport React from 'react'\nimport BraftEditor from 'braft-editor'\n\nexport default class Editer extends React.Component {\n\n  state = {\n    editorState: BraftEditor.createEditorState('<p>Hello <b>World!</b></p>'), // 设置编辑器初始内容\n    outputHTML: '<p></p>'\n  }\n\n  componentDidMount() {\n    this.isLivinig = true\n    // 3秒后更改编辑器内容\n    setTimeout(this.setEditorContentAsync, 3000)\n  }\n\n  componentWillUnmount() {\n    this.isLivinig = false\n  }\n\n  handleChange = (editorState) => {\n    this.setState({\n      editorState: editorState,\n      outputHTML: editorState.toRAW()\n    })\n  }\n\n  setEditorContentAsync = () => {\n    this.isLivinig && this.setState({\n      editorState: BraftEditor.createEditorState('<p>你好，<b>世界!</b><p>')\n    })\n  }\n\n  render() {\n\n    const { editorState, outputHTML } = this.state\n\n    return (\n      <div>\n        <div className=\"editor-wrapper\">\n          <BraftEditor\n            value={editorState}\n            onChange={this.handleChange}\n          />\n        </div>\n        <h5>输出内容</h5>\n        <div className=\"output-content\">{outputHTML}</div>\n      </div>\n    )\n\n  }\n\n}","import { combineReducers } from 'redux';\nimport { FETCH_POSTS, RECEIVE_POSTS } from './actions';\n\nconst initialState = {\n  isFetching: false,\n  items: [],\n};\n\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n      });\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: state.items.concat(action.posts),\n      });\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ posts });\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, createLogger()),\n);\n","export default __webpack_public_path__ + \"static/media/forbidden.2049cbed.jpeg\";","import React, { PureComponent } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n\nimport PostListContainer from \"./components/PostListContainer\";\nimport PostContainer from \"./components/PostContainer\";\nimport Editer from \"./components/Editer\";\nimport store from \"./redux/store\";\nimport styles from \"./app.css\";\n\nimport { Layout, Menu, Image, Button } from \"antd\";\nimport {\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n} from \"@ant-design/icons\";\nimport Background from \"./statics/forbidden.jpeg\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default class App extends PureComponent {\n  _redirectToHome() {\n    return <Redirect to=\"/\" />;\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <MuiThemeProvider>\n          <Layout>\n            <Header className={styles.header}>\n              {/* <Image\n                src={require(\"./statics/forbidden.jpeg\").default}\n                className={styles.top}\n              /> */}\n              {/* <div\n                style={{\n                  backgroundImage: `url(${Background})`,\n                  backgroundSize: \"cover\"\n                }}\n              /> */}\n              <div\n                style={{\n                  display: \"inline-block\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  background: `url(\"${Background}\") no-repeat`,\n                }}\n              ></div>\n            </Header>\n            <Layout className={styles.site_layout}>\n              <Sider className={styles.sider}>\n                <Menu\n                  mode=\"inline\"\n                  defaultSelectedKeys={[\"0\"]}\n                  defaultOpenKeys={[\"sub1\"]}\n                  style={{ height: \"100%\", borderRight: 0 }}\n                >\n                  <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                    文化\n                  </Menu.Item>\n                  <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n                    体育\n                  </Menu.Item>\n                  <Menu.Item key=\"3\" icon={<ContainerOutlined />}>\n                    计算机\n                  </Menu.Item>\n                </Menu>\n              </Sider>\n              <Content\n                style={{\n                  padding: 24,\n                  margin: 0,\n                  minHeight: 280,\n                }}\n              >\n                <Router>\n                  <Switch>\n                    <Route exact path=\"/\" component={PostListContainer} />\n                    <Route path=\"/posts/:id/:slug\" component={PostContainer} />\n                    <Route exact path=\"/edit\" component={Editer} />\n                    {/* catch-all redirects to home */}\n                    <Route render={this._redirectToHome} />\n                  </Switch>\n                </Router>\n              </Content>\n            </Layout>\n\n            <Footer />\n          </Layout>\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nvar COS = require('cos-js-sdk-v5');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nvar cos = new COS({\n  SecretId: 'AKIDGUYXuBcH5lGdM748OVYSAnX8ZO2TN07B',\n  SecretKey: '2tY1LVYRqDiCYkneLuJ9oKtbKwPkPtFW',\n});\n\ncos.putObject({\n  Bucket: 'reading-1259170587', /* 必须 */\n  Region: 'ap-chengdu',     /* 存储桶所在地域，必须字段 */\n  Key: 'post/postClass',              /* 必须 */\n  Body: JSON.stringify({a:1,b:2}), // 上传文件对象\n  onProgress: function(progressData) {\n      console.log(JSON.stringify(progressData));\n  }\n}, function(err, data) {\n  console.log(err || data);\n});\n\ncos.getObject({\n  Bucket: 'reading-1259170587', /* 必须 */\n  Region: 'ap-chengdu',     /* 存储桶所在地域，必须字段 */\n  Key: 'post/postClass',           /* 非必须 */\n}, function(err, data) {\n  console.log(err || data.Body);\n});"],"sourceRoot":""}